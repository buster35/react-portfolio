{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zach\\\\Documents\\\\bootcamp\\\\homework\\\\react-portfolio\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Button, Card, Col, Row, Container, Modal, Image } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Project(_ref) {\n  _s();\n  let {\n    projects\n  } = _ref;\n  //TODO://useState for showing \"Deployed\" button; if both button href equals themselves then set cursor to N/A\"\n  const [showModal, setShowModal] = useState(false);\n\n  // const handleClose = () => setShowModal(false);\n  const handleShow = () => {\n    setShowModal(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    style: {\n      marginBottom: \"100px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"g-4 mt-0 pages\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"portfolio\",\n        children: \"Portfolio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), projects.map(project => /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          padding: \"10px\",\n          margin: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"auto\",\n            minWidth: \"200px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: handleShow,\n            children: /*#__PURE__*/_jsxDEV(Card.Img, {\n              className: \"cardImg\",\n              variant: \"top\",\n              src: project.cardBg,\n              alt: \"project screenshots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            style: {\n              backgroundColor: \"#778DA9\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: project.projectType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              href: project.gitHub,\n              children: \"GitHub Repo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              href: project.demo,\n              children: \"Deployed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Project, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","Button","Card","Col","Row","Container","Modal","Image","jsxDEV","_jsxDEV","Project","_ref","_s","projects","showModal","setShowModal","handleShow","fluid","style","marginBottom","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","map","project","padding","margin","width","minWidth","onClick","Img","variant","src","cardBg","alt","Body","backgroundColor","Title","name","Text","projectType","href","gitHub","demo","_c","$RefreshReg$"],"sources":["C:/Users/Zach/Documents/bootcamp/homework/react-portfolio/src/components/Project.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Modal,\r\n  Image,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Project({ projects }) {\r\n  //TODO://useState for showing \"Deployed\" button; if both button href equals themselves then set cursor to N/A\"\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // const handleClose = () => setShowModal(false);\r\n  const handleShow = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <Container fluid style={{ marginBottom: \"100px\" }}>\r\n      <Row className=\"g-4 mt-0 pages\">\r\n        <h2 id=\"portfolio\">Portfolio:</h2>\r\n        {projects.map((project) => (\r\n          <Col key={project.id} style={{ padding: \"10px\", margin: \"20px\" }}>\r\n            <Card style={{ width: \"auto\", minWidth: \"200px\" }}>\r\n              {/* eslint-disable-next-line */}\r\n              <a onClick={handleShow}>\r\n                <Card.Img\r\n                  className=\"cardImg\"\r\n                  variant=\"top\"\r\n                  src={project.cardBg}\r\n                  alt=\"project screenshots\"\r\n                />\r\n              </a>\r\n              <Card.Body\r\n                style={{\r\n                  backgroundColor: \"#778DA9\",\r\n                }}\r\n              >\r\n                <Card.Title>{project.name}</Card.Title>\r\n\r\n                <Card.Text>{project.projectType}</Card.Text>\r\n\r\n                <Button variant=\"secondary\" href={project.gitHub}>\r\n                  GitHub Repo\r\n                </Button>\r\n                <Button variant=\"secondary\" href={project.demo}>\r\n                  Deployed\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n        {/* <Modal\r\n          show={showModal}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={true}\r\n          style={{ backgroundColor: \"#0D1B2A\" }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{project.name}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Image\r\n              src={project.cardBg}\r\n              style={{ maxWidth: \"450px\", objectFit: \"contain\" }}\r\n            ></Image>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal> */}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}