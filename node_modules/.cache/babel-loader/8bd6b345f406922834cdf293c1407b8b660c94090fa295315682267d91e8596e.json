{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zach\\\\Documents\\\\bootcamp\\\\homework\\\\react-portfolio\\\\src\\\\components\\\\Project.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Button, Card, Col, Row, Container, Modal, Image } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Project(_ref) {\n  let {\n    projects,\n    setShowModal\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    style: {\n      marginBottom: \"100px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"g-4 mt-0 pages\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"portfolio\",\n        children: \"Portfolio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), projects.map(project => /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          padding: \"10px\",\n          margin: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"auto\",\n            minWidth: \"200px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: handleShow,\n            children: /*#__PURE__*/_jsxDEV(Card.Img, {\n              className: \"cardImg\",\n              variant: \"top\",\n              src: project.cardBg,\n              alt: \"project screenshots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            style: {\n              backgroundColor: \"#778DA9\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: project.projectType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              href: project.gitHub,\n              children: \"GitHub Repo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              href: project.demo,\n              children: \"Deployed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","Button","Card","Col","Row","Container","Modal","Image","jsxDEV","_jsxDEV","Project","_ref","projects","setShowModal","fluid","style","marginBottom","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","map","project","padding","margin","width","minWidth","onClick","handleShow","Img","variant","src","cardBg","alt","Body","backgroundColor","Title","name","Text","projectType","href","gitHub","demo","_c","$RefreshReg$"],"sources":["C:/Users/Zach/Documents/bootcamp/homework/react-portfolio/src/components/Project.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Col,\n  Row,\n  Container,\n  Modal,\n  Image,\n} from \"react-bootstrap\";\n\nfunction Project({ projects, setShowModal }) {\n  return (\n    <Container fluid style={{ marginBottom: \"100px\" }}>\n      <Row className=\"g-4 mt-0 pages\">\n        <h2 id=\"portfolio\">Portfolio:</h2>\n        {projects.map((project) => (\n          <Col key={project.id} style={{ padding: \"10px\", margin: \"20px\" }}>\n            <Card style={{ width: \"auto\", minWidth: \"200px\" }}>\n              {/* eslint-disable-next-line */}\n              <a onClick={handleShow}>\n                <Card.Img\n                  className=\"cardImg\"\n                  variant=\"top\"\n                  src={project.cardBg}\n                  alt=\"project screenshots\"\n                />\n              </a>\n              <Card.Body\n                style={{\n                  backgroundColor: \"#778DA9\",\n                }}\n              >\n                <Card.Title>{project.name}</Card.Title>\n\n                <Card.Text>{project.projectType}</Card.Text>\n\n                <Button variant=\"secondary\" href={project.gitHub}>\n                  GitHub Repo\n                </Button>\n                <Button variant=\"secondary\" href={project.demo}>\n                  Deployed\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Project;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}