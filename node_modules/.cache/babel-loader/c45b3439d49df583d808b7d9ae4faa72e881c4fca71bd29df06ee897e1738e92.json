{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zach\\\\Documents\\\\bootcamp\\\\homework\\\\react-portfolio\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { Stack } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport AboutMe from \"./components/AboutMe\";\nimport Project from \"./components/Project\";\nimport projects from \"./projects\";\nimport Contact from \"./components/Contact\";\nimport Resume from \"./components/Resume\";\nimport Languages from \"./components/Languages\";\n\n//App is current representation of state//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stack, setStack] = useState(\"\");\n  let stackContent;\n  if (stack.includes(\"/#portfolio\")) {\n    stackContent = /*#__PURE__*/_jsxDEV(Project, {\n      projects: projects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 20\n    }, this);\n  } else if (stack.includes(\"/#contact\")) {\n    stackContent = /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this);\n  } else if (stack.includes(\"/#resume\")) {\n    stackContent = /*#__PURE__*/_jsxDEV(Resume, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }, this);\n  } else stackContent = /*#__PURE__*/_jsxDEV(Languages, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      stack: stack,\n      setStack: setStack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AboutMe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      children: stackContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"TqqG+sXc07tTDVxw6nK/3BR2Dho=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Stack","Header","Footer","AboutMe","Project","projects","Contact","Resume","Languages","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","stack","setStack","stackContent","includes","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Zach/Documents/bootcamp/homework/react-portfolio/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport { Stack } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport AboutMe from \"./components/AboutMe\";\nimport Project from \"./components/Project\";\nimport projects from \"./projects\";\nimport Contact from \"./components/Contact\";\nimport Resume from \"./components/Resume\";\nimport Languages from \"./components/Languages\";\n\n//App is current representation of state//\nfunction App() {\n  const [stack, setStack] = useState(\"\");\n\n  let stackContent;\n\n  if (stack.includes(\"/#portfolio\")) {\n    stackContent = <Project projects={projects} />;\n  } else if (stack.includes(\"/#contact\")) {\n    stackContent = <Contact />;\n  } else if (stack.includes(\"/#resume\")) {\n    stackContent = <Resume />;\n  } else stackContent = <Languages />;\n\n  return (\n    <>\n      {/* inside Components i can define props related to state */}\n      <Header stack={stack} setStack={setStack} />\n\n      <AboutMe />\n      {/* here is where i'll use conditional rendering to determine which react-bootstrap \"Stack\" component will be displayed based on click event in navbar */}\n      <Stack>{stackContent}</Stack>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAO,sCAAsC;AAC7C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtC,IAAIkB,YAAY;EAEhB,IAAIF,KAAK,CAACG,QAAQ,CAAC,aAAa,CAAC,EAAE;IACjCD,YAAY,gBAAGP,OAAA,CAACN,OAAO;MAACC,QAAQ,EAAEA;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChD,CAAC,MAAM,IAAIP,KAAK,CAACG,QAAQ,CAAC,WAAW,CAAC,EAAE;IACtCD,YAAY,gBAAGP,OAAA,CAACJ,OAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B,CAAC,MAAM,IAAIP,KAAK,CAACG,QAAQ,CAAC,UAAU,CAAC,EAAE;IACrCD,YAAY,gBAAGP,OAAA,CAACH,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3B,CAAC,MAAML,YAAY,gBAAGP,OAAA,CAACF,SAAS;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEnC,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBAEEb,OAAA,CAACT,MAAM;MAACc,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE5CZ,OAAA,CAACP,OAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEXZ,OAAA,CAACV,KAAK;MAAAuB,QAAA,EAAEN;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7BZ,OAAA,CAACR,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACV,CAAC;AAEP;AAACR,EAAA,CAxBQD,GAAG;AAAAW,EAAA,GAAHX,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}