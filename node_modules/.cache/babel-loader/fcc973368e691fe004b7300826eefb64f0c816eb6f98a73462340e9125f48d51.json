{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zach\\\\Documents\\\\bootcamp\\\\homework\\\\react-portfolio\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { Stack } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport AboutMe from \"./components/AboutMe\";\nimport Project from \"./components/Project\";\nimport projects from \"./projects\";\nimport Contact from \"./components/Contact\";\nimport Resume from \"./components/Resume\";\nimport Languages from \"./components/Languages\";\nimport Modal from \"./components/Modal\";\n\n//App is current representation of state//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stack, setStack] = useState(\"\");\n  const [open, setOpen] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const handleShow = e => {\n    console.log(this.child.src);\n    setShowModal(true);\n  };\n  const setModalImg = e => {};\n  let stackContent;\n  if (stack.includes(\"/#portfolio\")) {\n    stackContent = /*#__PURE__*/_jsxDEV(Project, {\n      projects: projects,\n      handleShow: handleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }, this);\n  } else if (stack.includes(\"/#contact\")) {\n    stackContent = /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this);\n  } else if (stack.includes(\"/#resume\")) {\n    stackContent = /*#__PURE__*/_jsxDEV(Resume, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }, this);\n  } else if (stack.includes(\"/#about-me\")) {\n    stackContent = /*#__PURE__*/_jsxDEV(Languages, {\n      open: open,\n      setOpen: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      stack: stack,\n      setStack: setStack,\n      open: open,\n      setOpen: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AboutMe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      children: stackContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      showModal: showModal,\n      setShowModal: setShowModal,\n      projects: projects,\n      handleShow: handleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"qhEo7PfElHkUyl+MtbZzqj1nBH4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Stack","Header","Footer","AboutMe","Project","projects","Contact","Resume","Languages","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","stack","setStack","open","setOpen","showModal","setShowModal","handleShow","e","console","log","child","src","setModalImg","stackContent","includes","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Zach/Documents/bootcamp/homework/react-portfolio/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport { Stack } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport AboutMe from \"./components/AboutMe\";\nimport Project from \"./components/Project\";\nimport projects from \"./projects\";\nimport Contact from \"./components/Contact\";\nimport Resume from \"./components/Resume\";\nimport Languages from \"./components/Languages\";\nimport Modal from \"./components/Modal\";\n\n//App is current representation of state//\nfunction App() {\n  const [stack, setStack] = useState(\"\");\n  const [open, setOpen] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleShow = (e) => {\n    console.log(this.child.src);\n    setShowModal(true);\n  };\n\n  const setModalImg = (e) => {};\n\n  let stackContent;\n\n  if (stack.includes(\"/#portfolio\")) {\n    stackContent = <Project projects={projects} handleShow={handleShow} />;\n  } else if (stack.includes(\"/#contact\")) {\n    stackContent = <Contact />;\n  } else if (stack.includes(\"/#resume\")) {\n    stackContent = <Resume />;\n  } else if (stack.includes(\"/#about-me\")) {\n    stackContent = <Languages open={open} setOpen={setOpen} />;\n  }\n\n  return (\n    <>\n      {/* inside Components i can define props related to state */}\n      <Header stack={stack} setStack={setStack} open={open} setOpen={setOpen} />\n\n      <AboutMe />\n      {/* here is where i'll use conditional rendering to determine which react-bootstrap \"Stack\" component will be displayed based on click event in navbar */}\n      <Stack>{stackContent}</Stack>\n      <Modal\n        showModal={showModal}\n        setShowModal={setShowModal}\n        projects={projects}\n        handleShow={handleShow}\n      ></Modal>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}